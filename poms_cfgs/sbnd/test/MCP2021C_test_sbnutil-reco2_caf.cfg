[global]
group      = sbnd
experiment = sbnd
sbndpro    = sbndpro
wrapper    = file:///${FIFE_UTILS_DIR}/libexec/fife_wrap
version    = v09_28_01_02
quals      = e20:prof

neventsperjob = -1

fclfile1 = override_me
fclfile2 = override_me

wrapper1 = wrapper1.fcl
wrapper2 = wrapper2.fcl

productionlabel        = MC2021C_test_sbnutil
mdproductiontype       = official
mdproductionname       = %(productionlabel)s
test_mdproductionname  = test_%(productionlabel)s
mdlaststage            = override_me
fclname                = override_me
basename               = override_me
outputdataset          = %(mdproductiontype)s_%(mdproductionname)s_%(fclname)s
outputdatasetname      = %(outputdataset)s
test_outputdatasetname = test_%(outputdataset)s
basedir                = /pnfs/sbn/data/sbn_nd/poms_production/%(mdproductiontype)s/%(mdproductionname)s/%(version)s/%(fclname)s/%(mdprojectstage)s/
outdir                 = %(basedir)s

[env_pass]
IFDH_CP_MAXRETRIES = 1
SAM_EXPERIMENT     = %(experiment)s
SAM_GROUP          = %(group)s
SAM_STATION        = %(experiment)s

[prelaunch]
script = mkdir -p %(basedir)s

[submit]
group                      = %(group)s
resource-provides          = usage_model=OPPORTUNISTIC,DEDICATED
#generate-email-summary     = True
expected-lifetime          = 2h
memory                     = 2000MB
N                          = -1 #500
n_files_per_job            = 1
append_condor_requirements = '(TARGET.HAS_CVMFS_sbnd_opensciencegrid_org==true)&&(TARGET.HAS_SINGULARITY=?=true)'
lines_1                    = '+SingularityImage=\"/cvmfs/singularity.opensciencegrid.org/fermilab/fnal-wn-sl7:latest\"'
#lines_2                    = '+FERMIHTC_AutoRelease=True'
#lines_3                    = '+FERMIHTC_GraceMemory=2048'
#lines_4                    = '+FERMIHTC_GraceLifetime=7200'

[sam_consumer]
limit     = 1
schema    = root
appfamily = art
appname   = %(mdprojectstage)s
appvers   = %(version)s

[job_setup]
debug        = True
ifdh_art     = True
source       = /cvmfs/sbnd.opensciencegrid.org/products/sbnd/setup_sbnd.sh
setup_0      = sbndcode %(version)s -q %(quals)s
setup_1      = sbnutil
prescript_0  = printenv; ups active
prescript_1  = sbnpoms_wrapperfcl_maker.sh --fclname %(fclfile1)s --wrappername wrapper1.fcl
prescript_2  = sbnpoms_wrapperfcl_maker.sh --fclname %(fclfile2)s --wrappername wrapper2.fcl

postscript_1 = ifdh mkdir_p %(outdir)s
postscript_2 = ls -lh

postscript_5 = export parent_fname=$(basename ${fname})


[executable]
name   = lar
arg_1 = -c
arg_2 = wrapper1.fcl
arg_3  = -o
arg_4  = %(basename)s.root
arg_5  = -T
arg_6  = hist_%(basename)s.root
arg_7  = -n
arg_8  = %(neventsperjob)s
arg_9  = --sam-data-tier
arg_10 = reconstructed
arg_11 = --sam-stream-name
arg_12 = out1

[executable_1]
name   = lar
arg_1  = -c
arg_2  = wrapper2.fcl
#arg_3  = -o
#arg_4  = %(basename)s_g4.root
#arg_5  = -T
#arg_6  = hist_%(basename)s_g4.root
arg_7  = -n
arg_8  = -1
arg_9  = --sam-data-tier
arg_10 = caf
arg_11 = --sam-stream-name
arg_12 = out1
arg_13 = -s
arg_14 = %(basename)s.root

[job_output]
addoutput          = %(basename)s.root
dest               = %(outdir)s
declare_metadata   = True
#metadata_extractor = sbndpoms_metadata_extractor.py
metadata_extractor = json
add_to_dataset     = %(outputdatasetname)s_%(basename)s_%(experiment)s
#filter_metadata    = parents
#add_metadata       = parents=\${parent_fname}
#add_metadata       = parents=\$(basename \${fname})
add_location       = True      
rename             = unique
hash               = 2
dataset_exclude    = hist*

[job_output_1]
addoutput          = hist_%(basename)s.root
dest               = %(outdir)s
declare_metadata   = True
#metadata_extractor = sbndpoms_metadata_extractor.py
metadata_extractor = json
add_to_dataset     = hist_%(outputdatasetname)s_%(basename)s_%(experiment)s
#filter_metadata    = parents
#add_metadata       = parents=\${parent_fname}
#add_metadata       = parents=\$(basename \${fname})
add_location       = True      
rename             = unique
hash               = 2

[job_output_2]
addoutput          = %(mdprojectstage)s.root
dest               = %(outdir)s
declare_metadata   = True
#metadata_extractor = sbndpoms_metadata_extractor.py
metadata_extractor = json
add_to_dataset     = %(outputdatasetname)s_%(mdprojectstage)s_%(experiment)s
#filter_metadata    = parents
#add_metadata       = parents=\${parent_fname}
#add_metadata       = parents=\$(basename \${fname})
add_location       = True       
rename             = unique
hash               = 2


[stage_reco2_caf]
global.basename        = reco2
global.mdprojectstage  = reco2_caf
global.mdlaststage     = caf

submit.dataset         = %(dataset)s

job_setup.ifdh_art     = False
job_setup.multifile    = True

job_setup.prescript_4  = sbnpoms_metadata_injector.sh --inputfclname wrapper1.fcl --mdappfamily art --mdappversion %(version)s --mdgroupname %(group)s --mdfiletype mc --mdruntype physics --mdfclname %(fclfile1)s --mdprojectname %(productionlabel)s --mdprojectstage reco2 --mdprojectversion %(version)s --mdprojectsoftware %(experiment)scode --mdproductionname %(mdproductionname)s --mdproductiontype %(mdproductiontype)s --tfilemdjsonname hist_%(basename)s.root.json
job_setup.prescript_5  = sbnpoms_metadata_injector.sh --inputfclname wrapper2.fcl --mdfclname %(fclfile2)s --mdprojectname %(productionlabel)s --mdprojectstage %(mdprojectstage)s --mdprojectversion %(version)s --mdprojectsoftware %(experiment)scode --mdproductionname %(mdproductionname)s --mdproductiontype %(mdproductiontype)s --mdappversion %(version)s --mdfiletype mc --mdappfamily art --mdruntype physics --mdgroupname %(group)s --tfilemdjsonname %(mdprojectstage)s.root.json --cafname %(mdprojectstage)s.root 
job_setup.prescript_6  = cat %(wrapper1)s
job_setup.prescript_7  = cat %(wrapper2)s

job_setup.postscript_3 = sbnpoms_metadata_extractor.py %(basename)s.root
job_setup.postscript_4 = sbndpoms_hist_metadata_appender.sh hist_%(basename)s.root
job_setup.postscript_5 = sbndpoms_hist_metadata_appender.sh %(mdprojectstage)s.root

job_setup.postscript_6 = mv %(basename)s.root.json %(basename)s.root.json.old; cat %(basename)s.root.json.old |sed '/^"file_name.*\|.*"parents.*/d' | tr '\n' '\r' | sed $'s/,\r"checksum.*]//' | tr '\r' '\n' > %(basename)s.root.json
job_setup.postscript_7 = mv hist_%(basename)s.root.json hist_%(basename)s.root.json.old; cat hist_%(basename)s.root.json.old | sed '/^"file_name.*/d ; /.*"parents.*/,+4d' | tr '\n' '\r' | sed $'s/,\r"checksum.*]//' | tr '\r' '\n' > hist_%(basename)s.root.json
job_setup.postscript_8 = mv %(mdprojectstage)s.root.json %(mdprojectstage)s.root.json.old; cat %(mdprojectstage)s.root.json.old | sed '/^"file_name.*/d ; /.*"parents.*/,+4d' | tr '\n' '\r' | sed $'s/,\r"checksum.*]//' | tr '\r' '\n' > %(mdprojectstage)s.root.json
job_setup.postscript_9 = cat %(basename)s.root.json hist_%(basename)s.root.json %(mdprojectstage)s.root.json
